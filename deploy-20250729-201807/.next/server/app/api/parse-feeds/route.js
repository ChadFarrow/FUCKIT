"use strict";(()=>{var a={};a.id=4955,a.ids=[4955],a.modules={261:a=>{a.exports=require("next/dist/shared/lib/router/utils/app-paths")},3295:a=>{a.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:a=>{a.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},16706:(a,b,c)=>{c.d(b,{g:()=>h});var d=c(29021),e=c.n(d),f=c(33873),g=c.n(f);class h{static{this.feedsData=null}static{this.feedsPath=g().join(process.cwd(),"data","feeds.json")}static loadFeeds(){if(this.feedsData)return this.feedsData;try{let a=e().readFileSync(this.feedsPath,"utf-8");return this.feedsData=JSON.parse(a),this.feedsData}catch(b){console.error("Failed to load feeds from data/feeds.json:",b);let a={feeds:[],lastUpdated:new Date().toISOString(),version:1};return this.feedsData=a,a}}static getActiveFeeds(){return this.loadFeeds().feeds.filter(a=>"active"===a.status)}static getFeedsByPriority(a){return this.getActiveFeeds().filter(b=>b.priority===a)}static getFeedsByType(a){return this.getActiveFeeds().filter(b=>b.type===a)}static getFeedUrlMappings(){return this.getActiveFeeds().map(a=>[a.originalUrl,a.type])}static getAlbumFeeds(){return this.getFeedsByType("album").map(a=>a.originalUrl)}static getPublisherFeeds(){return this.getFeedsByType("publisher").map(a=>a.originalUrl)}static getCoreFeeds(){return this.getFeedsByPriority("core").map(a=>a.originalUrl)}static getExtendedFeeds(){return this.getFeedsByPriority("extended").map(a=>a.originalUrl)}static getLowPriorityFeeds(){return this.getFeedsByPriority("low").map(a=>a.originalUrl)}static addFeed(a){let b=this.loadFeeds(),c={...a,addedAt:new Date().toISOString(),lastUpdated:new Date().toISOString()};b.feeds.push(c),b.lastUpdated=new Date().toISOString(),e().writeFileSync(this.feedsPath,JSON.stringify(b,null,2)),this.feedsData=b}static updateFeed(a,b){let c=this.loadFeeds(),d=c.feeds.findIndex(b=>b.id===a);-1!==d&&(c.feeds[d]={...c.feeds[d],...b,lastUpdated:new Date().toISOString()},c.lastUpdated=new Date().toISOString(),e().writeFileSync(this.feedsPath,JSON.stringify(c,null,2)),this.feedsData=c)}static removeFeed(a){let b=this.loadFeeds();b.feeds=b.feeds.filter(b=>b.id!==a),b.lastUpdated=new Date().toISOString(),e().writeFileSync(this.feedsPath,JSON.stringify(b,null,2)),this.feedsData=b}}},29021:a=>{a.exports=require("fs")},29294:a=>{a.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:a=>{a.exports=require("path")},44870:a=>{a.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},47473:(a,b,c)=>{c.r(b),c.d(b,{handler:()=>E,patchFetch:()=>D,routeModule:()=>z,serverHooks:()=>C,workAsyncStorage:()=>A,workUnitAsyncStorage:()=>B});var d={};c.r(d),c.d(d,{GET:()=>x,POST:()=>y});var e=c(96559),f=c(48088),g=c(37719),h=c(26191),i=c(81289),j=c(261),k=c(92603),l=c(39893),m=c(14823),n=c(47220),o=c(66946),p=c(47912),q=c(99786),r=c(46143),s=c(86439),t=c(43365),u=c(32190),v=c(80170),w=c(16706);async function x(a){try{let{searchParams:b}=new URL(a.url),c=b.get("action");if("stats"===c){let a=v.W.getParseStats(),b=v.W.getParsedFeeds();return u.NextResponse.json({success:!0,stats:a,lastUpdated:b.length>0?b[0].lastParsed:null,totalFeeds:b.length})}if("albums"===c){let a=v.W.getParsedAlbums(),b=v.W.getAlbumsByPriority("core"),c=v.W.getAlbumsByPriority("extended"),d=v.W.getAlbumsByPriority("low");return u.NextResponse.json({success:!0,albums:{all:a,core:b,extended:c,low:d},count:a.length})}if("search"===c){let a=b.get("q");if(!a)return u.NextResponse.json({success:!1,error:'Query parameter "q" is required'},{status:400});let c=v.W.searchAlbums(a);return u.NextResponse.json({success:!0,query:a,results:c,count:c.length})}let d=w.g.getActiveFeeds(),e=v.W.getParseStats();return u.NextResponse.json({success:!0,message:"Feed Parser API",availableActions:["stats","albums","search","parse"],currentStats:e,activeFeeds:d.length})}catch(a){return console.error("Error in parse-feeds API:",a),u.NextResponse.json({success:!1,error:a instanceof Error?a.message:"Unknown error"},{status:500})}}async function y(a){try{let{searchParams:b}=new URL(a.url),c=b.get("action");if("parse"===c){console.log("\uD83D\uDD04 Starting feed parsing via API...");let a=await v.W.parseAllFeeds();return u.NextResponse.json({success:!0,message:"Feed parsing completed",report:a})}if("parse-single"===c){let a=b.get("feedId");if(!a)return u.NextResponse.json({success:!1,error:"feedId parameter is required"},{status:400});let c=await v.W.parseFeedById(a);return u.NextResponse.json({success:!0,message:"Single feed parsing completed",result:c})}return u.NextResponse.json({success:!1,error:'Invalid action. Use "parse" or "parse-single"'},{status:400})}catch(a){return console.error("Error in parse-feeds API:",a),u.NextResponse.json({success:!1,error:a instanceof Error?a.message:"Unknown error"},{status:500})}}let z=new e.AppRouteRouteModule({definition:{kind:f.RouteKind.APP_ROUTE,page:"/api/parse-feeds/route",pathname:"/api/parse-feeds",filename:"route",bundlePath:"app/api/parse-feeds/route"},distDir:".next",projectDir:"",resolvedPagePath:"/Users/chad-mini/Vibe/apps/FUCKIT/app/api/parse-feeds/route.ts",nextConfigOutput:"",userland:d}),{workAsyncStorage:A,workUnitAsyncStorage:B,serverHooks:C}=z;function D(){return(0,g.patchFetch)({workAsyncStorage:A,workUnitAsyncStorage:B})}async function E(a,b,c){var d;let e="/api/parse-feeds/route";"/index"===e&&(e="/");let g=await z.prepare(a,b,{srcPage:e,multiZoneDraftMode:"false"});if(!g)return b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve()),null;let{buildId:u,params:v,nextConfig:w,isDraftMode:x,prerenderManifest:y,routerServerContext:A,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,resolvedPathname:D}=g,E=(0,j.normalizeAppPath)(e),F=!!(y.dynamicRoutes[E]||y.routes[D]);if(F&&!x){let a=!!y.routes[D],b=y.dynamicRoutes[E];if(b&&!1===b.fallback&&!a)throw new s.NoFallbackError}let G=null;!F||z.isDev||x||(G="/index"===(G=D)?"/":G);let H=!0===z.isDev||!F,I=F&&!H,J=a.method||"GET",K=(0,i.getTracer)(),L=K.getActiveScopeSpan(),M={params:v,prerenderManifest:y,renderOpts:{experimental:{dynamicIO:!!w.experimental.dynamicIO,authInterrupts:!!w.experimental.authInterrupts},supportsDynamicResponse:H,incrementalCache:(0,h.getRequestMeta)(a,"incrementalCache"),cacheLifeProfiles:null==(d=w.experimental)?void 0:d.cacheLife,isRevalidate:I,waitUntil:c.waitUntil,onClose:a=>{b.on("close",a)},onAfterTaskError:void 0,onInstrumentationRequestError:(b,c,d)=>z.onRequestError(a,b,d,A)},sharedContext:{buildId:u}},N=new k.NodeNextRequest(a),O=new k.NodeNextResponse(b),P=l.NextRequestAdapter.fromNodeNextRequest(N,(0,l.signalFromNodeResponse)(b));try{let d=async c=>z.handle(P,M).finally(()=>{if(!c)return;c.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let d=K.getRootSpanAttributes();if(!d)return;if(d.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${d.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let e=d.get("next.route");if(e){let a=`${J} ${e}`;c.setAttributes({"next.route":e,"http.route":e,"next.span_name":a}),c.updateName(a)}else c.updateName(`${J} ${a.url}`)}),g=async g=>{var i,j;let k=async({previousCacheEntry:f})=>{try{if(!(0,h.getRequestMeta)(a,"minimalMode")&&B&&C&&!f)return b.statusCode=404,b.setHeader("x-nextjs-cache","REVALIDATED"),b.end("This page could not be found"),null;let e=await d(g);a.fetchMetrics=M.renderOpts.fetchMetrics;let i=M.renderOpts.pendingWaitUntil;i&&c.waitUntil&&(c.waitUntil(i),i=void 0);let j=M.renderOpts.collectedTags;if(!F)return await (0,o.I)(N,O,e,M.renderOpts.pendingWaitUntil),null;{let a=await e.blob(),b=(0,p.toNodeOutgoingHttpHeaders)(e.headers);j&&(b[r.NEXT_CACHE_TAGS_HEADER]=j),!b["content-type"]&&a.type&&(b["content-type"]=a.type);let c=void 0!==M.renderOpts.collectedRevalidate&&!(M.renderOpts.collectedRevalidate>=r.INFINITE_CACHE)&&M.renderOpts.collectedRevalidate,d=void 0===M.renderOpts.collectedExpire||M.renderOpts.collectedExpire>=r.INFINITE_CACHE?void 0:M.renderOpts.collectedExpire;return{value:{kind:t.CachedRouteKind.APP_ROUTE,status:e.status,body:Buffer.from(await a.arrayBuffer()),headers:b},cacheControl:{revalidate:c,expire:d}}}}catch(b){throw(null==f?void 0:f.isStale)&&await z.onRequestError(a,b,{routerKind:"App Router",routePath:e,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})},A),b}},l=await z.handleResponse({req:a,nextConfig:w,cacheKey:G,routeKind:f.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:y,isRoutePPREnabled:!1,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,responseGenerator:k,waitUntil:c.waitUntil});if(!F)return null;if((null==l||null==(i=l.value)?void 0:i.kind)!==t.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==l||null==(j=l.value)?void 0:j.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,h.getRequestMeta)(a,"minimalMode")||b.setHeader("x-nextjs-cache",B?"REVALIDATED":l.isMiss?"MISS":l.isStale?"STALE":"HIT"),x&&b.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let m=(0,p.fromNodeOutgoingHttpHeaders)(l.value.headers);return(0,h.getRequestMeta)(a,"minimalMode")&&F||m.delete(r.NEXT_CACHE_TAGS_HEADER),!l.cacheControl||b.getHeader("Cache-Control")||m.get("Cache-Control")||m.set("Cache-Control",(0,q.getCacheControlHeader)(l.cacheControl)),await (0,o.I)(N,O,new Response(l.value.body,{headers:m,status:l.value.status||200})),null};L?await g(L):await K.withPropagatedContext(a.headers,()=>K.trace(m.BaseServerSpan.handleRequest,{spanName:`${J} ${a.url}`,kind:i.SpanKind.SERVER,attributes:{"http.method":J,"http.target":a.url}},g))}catch(b){if(L||await z.onRequestError(a,b,{routerKind:"App Router",routePath:E,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})}),F)throw b;return await (0,o.I)(N,O,new Response(null,{status:500})),null}}},63033:a=>{a.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},80170:(a,b,c)=>{c.d(b,{W:()=>j});var d=c(16608),e=c(16706),f=c(29021),g=c.n(f),h=c(33873),i=c.n(h);class j{static{this.parsedDataPath=i().join(process.cwd(),"data","parsed-feeds.json")}static{this.reportPath=i().join(process.cwd(),"data","parse-reports")}static async parseAllFeeds(){let a=Date.now(),b=e.g.getActiveFeeds(),c=[],f=[];for(let a of(console.log(`🔄 Starting to parse ${b.length} active feeds...`),b))try{console.log(`📡 Parsing feed: ${a.title} (${a.originalUrl})`);let b={...a,parseStatus:"pending",lastParsed:new Date().toISOString()};if("album"===a.type){let c=await d.K.parseAlbumFeed(a.originalUrl);c?(b.parsedData={album:c},b.parseStatus="success",b.trackCount=c.tracks.length,b.duration=c.duration,b.hasPodRoll=c.podroll&&c.podroll.length>0,b.hasFunding=c.funding&&c.funding.length>0,b.categories=c.categories,b.keywords=c.keywords):(b.parseStatus="error",b.parseError="No album data found",f.push({feedId:a.id,feedUrl:a.originalUrl,error:"No album data found"}))}else if("publisher"===a.type)try{let c=await d.K.parsePublisherFeedInfo(a.originalUrl),e=await d.K.parsePublisherFeed(a.originalUrl);b.parsedData={publisherInfo:c||void 0,publisherItems:e},b.parseStatus="success"}catch(c){b.parseStatus="error",b.parseError=c instanceof Error?c.message:"Unknown error",f.push({feedId:a.id,feedUrl:a.originalUrl,error:b.parseError})}c.push(b),await new Promise(a=>setTimeout(a,100))}catch(d){console.error(`❌ Error parsing feed ${a.id}:`,d);let b={...a,parseStatus:"error",parseError:d instanceof Error?d.message:"Unknown error",lastParsed:new Date().toISOString()};c.push(b),f.push({feedId:a.id,feedUrl:a.originalUrl,error:b.parseError||"Unknown error"})}await this.saveParsedFeeds(c);let g=this.generateReport(c,f,Date.now()-a);return await this.saveParseReport(g),console.log(`✅ Feed parsing completed!`),console.log(`📊 Report: ${g.successfulParses}/${g.totalFeeds} feeds parsed successfully`),console.log(`🎵 Found ${g.albumsFound} albums with ${g.totalTracks} tracks`),console.log(`🏢 Found ${g.publishersFound} publishers`),console.log(`⏱️ Total parse time: ${(g.parseTime/1e3).toFixed(2)}s`),g}static async parseFeedById(a){let b=e.g.getActiveFeeds().find(b=>b.id===a);if(!b)throw Error(`Feed with ID '${a}' not found`);let c={...b,parseStatus:"pending",lastParsed:new Date().toISOString()};try{if("album"===b.type){let a=await d.K.parseAlbumFeed(b.originalUrl);a?(c.parsedData={album:a},c.parseStatus="success",c.trackCount=a.tracks.length,c.duration=a.duration,c.hasPodRoll=a.podroll&&a.podroll.length>0,c.hasFunding=a.funding&&a.funding.length>0,c.categories=a.categories,c.keywords=a.keywords):(c.parseStatus="error",c.parseError="No album data found")}else if("publisher"===b.type){let a=await d.K.parsePublisherFeedInfo(b.originalUrl),e=await d.K.parsePublisherFeed(b.originalUrl);c.parsedData={publisherInfo:a||void 0,publisherItems:e},c.parseStatus="success"}return await this.updateParsedFeed(c),c}catch(a){throw c.parseStatus="error",c.parseError=a instanceof Error?a.message:"Unknown error",await this.updateParsedFeed(c),a}}static getParsedFeeds(){try{if(!g().existsSync(this.parsedDataPath))return[];let a=g().readFileSync(this.parsedDataPath,"utf-8"),b=JSON.parse(a);return Array.isArray(b)?b:b.feeds||[]}catch(a){return console.error("Error reading parsed feeds:",a),[]}}static getParsedFeedById(a){return this.getParsedFeeds().find(b=>b.id===a)||null}static getParsedAlbums(){return this.getParsedFeeds().filter(a=>"album"===a.type&&"success"===a.parseStatus&&a.parsedData?.album).map(a=>a.parsedData.album).filter(Boolean)}static getAlbumsByPriority(a){return this.getParsedFeeds().filter(b=>"album"===b.type&&b.priority===a&&"success"===b.parseStatus&&b.parsedData?.album).map(a=>a.parsedData.album).filter(Boolean)}static getAlbumsWithPodRoll(){return this.getParsedFeeds().filter(a=>"album"===a.type&&"success"===a.parseStatus&&a.hasPodRoll&&a.parsedData?.album).map(a=>a.parsedData.album).filter(Boolean)}static getAlbumsWithFunding(){return this.getParsedFeeds().filter(a=>"album"===a.type&&"success"===a.parseStatus&&a.hasFunding&&a.parsedData?.album).map(a=>a.parsedData.album).filter(Boolean)}static searchAlbums(a){let b=this.getParsedAlbums(),c=a.toLowerCase();return b.filter(a=>a.title.toLowerCase().includes(c)||a.artist.toLowerCase().includes(c)||a.description&&a.description.toLowerCase().includes(c))}static getParseStats(){let a=this.getParsedFeeds(),b=Array.isArray(a)?a:a.feeds||[];return{totalFeeds:b.length,successfulParses:b.filter(a=>"success"===a.parseStatus).length,failedParses:b.filter(a=>"error"===a.parseStatus).length,albumsFound:b.filter(a=>"album"===a.type&&"success"===a.parseStatus).length,publishersFound:b.filter(a=>"publisher"===a.type&&"success"===a.parseStatus).length,totalTracks:b.reduce((a,b)=>a+(b.trackCount||0),0),podRollFeeds:b.filter(a=>a.hasPodRoll).length,fundingFeeds:b.filter(a=>a.hasFunding).length}}static async saveParsedFeeds(a){try{let b={feeds:a,lastUpdated:new Date().toISOString(),version:1},c=i().dirname(this.parsedDataPath);g().existsSync(c)||g().mkdirSync(c,{recursive:!0}),g().writeFileSync(this.parsedDataPath,JSON.stringify(b,null,2)),console.log(`💾 Saved parsed feeds to ${this.parsedDataPath}`)}catch(a){throw console.error("Error saving parsed feeds:",a),a}}static async updateParsedFeed(a){let b=this.getParsedFeeds(),c=b.findIndex(b=>b.id===a.id);-1!==c?b[c]=a:b.push(a),await this.saveParsedFeeds(b)}static generateReport(a,b,c){let d=a.filter(a=>"success"===a.parseStatus).length,e=a.filter(a=>"album"===a.type&&"success"===a.parseStatus).length,f=a.filter(a=>"publisher"===a.type&&"success"===a.parseStatus).length,g=a.reduce((a,b)=>a+(b.trackCount||0),0),h=a.filter(a=>a.hasPodRoll).length,i=a.filter(a=>a.hasFunding).length,j=a.reduce((a,b)=>{if(b.duration){let c=b.duration.split(":").map(Number);if(3===c.length)return a+(3600*c[0]+60*c[1]+c[2])*1e3;if(2===c.length)return a+(60*c[0]+c[1])*1e3}return a},0),k=this.formatDuration(j);return{totalFeeds:a.length,successfulParses:d,failedParses:a.length-d,albumsFound:e,publishersFound:f,totalTracks:g,totalDuration:k,podRollFeeds:h,fundingFeeds:i,parseTime:c,timestamp:new Date().toISOString(),errors:b}}static async saveParseReport(a){try{g().existsSync(this.reportPath)||g().mkdirSync(this.reportPath,{recursive:!0});let b=`parse-report-${new Date().toISOString().split("T")[0]}-${Date.now()}.json`,c=i().join(this.reportPath,b);g().writeFileSync(c,JSON.stringify(a,null,2)),console.log(`📊 Saved parse report to ${c}`)}catch(a){console.error("Error saving parse report:",a)}}static formatDuration(a){let b=Math.floor(a/1e3),c=Math.floor(b/3600),d=Math.floor(b%3600/60),e=b%60;return c>0?`${c.toString().padStart(2,"0")}:${d.toString().padStart(2,"0")}:${e.toString().padStart(2,"0")}`:`${d.toString().padStart(2,"0")}:${e.toString().padStart(2,"0")}`}}},86439:a=>{a.exports=require("next/dist/shared/lib/no-fallback-error.external")}};var b=require("../../../webpack-runtime.js");b.C(a);var c=b.X(0,[4985,6055,7292],()=>b(b.s=47473));module.exports=c})();