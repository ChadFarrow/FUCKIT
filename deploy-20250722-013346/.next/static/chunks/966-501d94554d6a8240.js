"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[966],{4966:(t,e,l)=>{l.d(e,{K:()=>r});class r{static async parseAlbumFeed(t){try{var e,l,r,n,i,o,a,u,s,m,g,c,d,p,y,f,v,h,x,S,C;let E;try{if(!(E=await fetch(t,{headers:{"User-Agent":"DoerfelVerse/1.0 (Music RSS Reader)"}})).ok)throw Error("Direct fetch failed")}catch(l){console.log("Direct fetch failed, trying proxy:",l);let e="/api/fetch-rss?url=".concat(encodeURIComponent(t));E=await fetch(e)}if(!E.ok)throw Error("Failed to fetch RSS feed: ".concat(E.status));let b=await E.text(),A=new DOMParser().parseFromString(b,"text/xml");if(A.querySelector("parsererror"))throw Error("Invalid XML format");let N=A.querySelector("channel");if(!N)throw Error("Invalid RSS feed: no channel found");let w=(null==(l=N.querySelector("title"))||null==(e=l.textContent)?void 0:e.trim())||"Unknown Album",B=(null==(n=N.querySelector("description"))||null==(r=n.textContent)?void 0:r.trim())||"",T=(null==(o=N.querySelector("link"))||null==(i=o.textContent)?void 0:i.trim())||"",q=t=>{if(t)return t.replace(/<[^>]*>/g,"").replace(/&nbsp;/g," ").replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&quot;/g,'"').replace(/&#39;/g,"'").trim()},k="Unknown Artist",I=N.querySelector("itunes\\:author, author");if(I)k=(null==(S=I.textContent)?void 0:S.trim())||k;else{let t=w.split(" - ");t.length>1&&(k=t[0].trim())}let D=null,F=N.getElementsByTagName("itunes:image")[0]||null;if(F||(F=N.querySelector("itunes\\:image")),F&&(D=F.getAttribute("href")||null),!D){let t=N.querySelector("image url");t&&(D=(null==(C=t.textContent)?void 0:C.trim())||null)}if(!D){let t=N.querySelector("image");if(t){let e=t.getAttribute("url")||t.getAttribute("href");e&&(D=e)}}let R=null==(u=N.getElementsByTagName("itunes:subtitle")[0])||null==(a=u.textContent)?void 0:a.trim(),U=null==(m=N.getElementsByTagName("itunes:summary")[0])||null==(s=m.textContent)?void 0:s.trim(),M=N.querySelector("language"),_=null==M||null==(g=M.textContent)?void 0:g.trim(),L=N.querySelector("copyright"),O=null==L||null==(c=L.textContent)?void 0:c.trim(),P=N.getElementsByTagName("itunes:explicit")[0],G=(null==P||null==(d=P.textContent)?void 0:d.trim().toLowerCase())==="true",K=N.getElementsByTagName("itunes:keywords")[0],V=(null==K||null==(p=K.textContent)?void 0:p.trim().split(",").map(t=>t.trim()).filter(t=>t))||[],X=N.getElementsByTagName("itunes:category"),$=Array.from(X).map(t=>t.getAttribute("text")).filter(Boolean),j=N.getElementsByTagName("itunes:owner")[0],z=j?{name:null==(f=j.getElementsByTagName("itunes:name")[0])||null==(y=f.textContent)?void 0:y.trim(),email:null==(h=j.getElementsByTagName("itunes:email")[0])||null==(v=h.textContent)?void 0:v.trim()}:void 0,H=A.querySelectorAll("item"),J=[];H.forEach((t,e)=>{var l,r,n,i,o,a,u,s,m,g;let c=(null==(r=t.querySelector("title"))||null==(l=r.textContent)?void 0:l.trim())||"Track ".concat(e+1),d="0:00",p=t.querySelector("itunes\\:duration"),y=t.querySelector("duration");if((null==p||null==(n=p.textContent)?void 0:n.trim())?d=p.textContent.trim():(null==y||null==(i=y.textContent)?void 0:i.trim())&&(d=y.textContent.trim()),d&&""!==d.trim()){let t=d.trim();if(/^\d+$/.test(t)){let e=parseInt(t);if(!isNaN(e)&&e>0){let t=Math.floor(e/60);d="".concat(t,":").concat((e%60).toString().padStart(2,"0"))}}else if(t.includes(":")&&2===t.split(":").length){let e=t.split(":"),l=parseInt(e[0]),r=parseInt(e[1]);!isNaN(l)&&!isNaN(r)&&l>=0&&r>=0&&r<60&&(d="".concat(l,":").concat(r.toString().padStart(2,"0")))}}else d="0:00";let f=t.querySelector("enclosure"),v=(null==f?void 0:f.getAttribute("url"))||void 0,h=null==(a=t.getElementsByTagName("itunes:subtitle")[0])||null==(o=a.textContent)?void 0:o.trim(),x=null==(s=t.getElementsByTagName("itunes:summary")[0])||null==(u=s.textContent)?void 0:u.trim(),S=t=>{if(t)return t.replace(/<[^>]*>/g,"").replace(/&nbsp;/g," ").replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&quot;/g,'"').replace(/&#39;/g,"'").trim()},C=t.getElementsByTagName("itunes:image")[0],E=(null==C?void 0:C.getAttribute("href"))||(null==C?void 0:C.getAttribute("url")),b=t.getElementsByTagName("itunes:explicit")[0],A=(null==b||null==(m=b.textContent)?void 0:m.trim().toLowerCase())==="true",N=t.getElementsByTagName("itunes:keywords")[0],w=(null==N||null==(g=N.textContent)?void 0:g.trim().split(",").map(t=>t.trim()).filter(t=>t))||[];J.push({title:c,duration:d,url:v,trackNumber:e+1,subtitle:S(h),summary:S(x),image:E||void 0,explicit:A,keywords:w.length>0?w:void 0})});let Q=N.querySelector("pubDate, lastBuildDate"),W=(null==Q||null==(x=Q.textContent)?void 0:x.trim())||new Date().toISOString(),Y=[],Z=Array.from(N.getElementsByTagName("podcast:funding")),tt=Array.from(N.getElementsByTagName("funding"));[...Z,...tt].forEach(t=>{var e,l;let r=t.getAttribute("url")||(null==(e=t.textContent)?void 0:e.trim()),n=(null==(l=t.textContent)?void 0:l.trim())||t.getAttribute("message");r&&Y.push({url:r,message:n||void 0})});let te=[],tl=Array.from(N.getElementsByTagName("podcast:podroll")),tr=Array.from(N.getElementsByTagName("podroll"));return[...tl,...tr].forEach(t=>{var e;let l=Array.from(t.getElementsByTagName("podcast:remoteItem")),r=Array.from(t.getElementsByTagName("remoteItem"));[...l,...r].forEach(t=>{var e;let l=t.getAttribute("feedUrl"),r=t.getAttribute("feedGuid"),n=t.getAttribute("title")||(null==(e=t.textContent)?void 0:e.trim()),i=t.getAttribute("description");l&&te.push({url:l,title:n||"Feed ".concat(r?r.substring(0,8)+"...":"Unknown"),description:i||void 0})});let n=t.getAttribute("url"),i=t.getAttribute("title")||(null==(e=t.textContent)?void 0:e.trim()),o=t.getAttribute("description");n&&te.push({url:n,title:i||void 0,description:o||void 0})}),{title:w,artist:k,description:q(B)||"",coverArt:D,tracks:J,releaseDate:W,link:T,funding:Y.length>0?Y:void 0,subtitle:q(R),summary:q(U),keywords:V.length>0?V:void 0,categories:$.length>0?$:void 0,explicit:G,language:_,copyright:O,owner:z&&(z.name||z.email)?z:void 0,podroll:te.length>0?te:void 0}}catch(t){return console.error("Error parsing RSS feed:",t),null}}static async parseMultipleFeeds(t){let e=t.map(t=>this.parseAlbumFeed(t));return(await Promise.allSettled(e)).filter(t=>"fulfilled"===t.status&&null!==t.value).map(t=>t.value)}}}}]);