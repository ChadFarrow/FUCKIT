exports.id=560,exports.ids=[560],exports.modules={868:(a,b,c)=>{"use strict";c.d(b,{K:()=>d});class d{static{this.MAX_RETRIES=3}static{this.RETRY_DELAY_BASE=1e3}static async withRetry(a,b=this.MAX_RETRIES,c=""){let d=null;for(let e=0;e<=b;e++)try{return await a()}catch(a){if(d=a,a instanceof Error&&(a.message.includes("Invalid RSS feed")||a.message.includes("Empty response")||a.message.includes("not valid XML")))throw a;if(e<b){let a=this.RETRY_DELAY_BASE*Math.pow(2,e);console.log(`üîÑ Retry ${e+1}/${b} for ${c} after ${a}ms`),await new Promise(b=>setTimeout(b,a))}}throw d||Error("Operation failed after retries")}static async parseAlbumFeed(a){try{let b,d,e;if(!(b=await fetch(a)).ok)throw console.error(`‚ùå RSS feed fetch failed: ${a} - Status: ${b.status}`),Error(`Failed to fetch RSS feed: ${b.status}`);let f=await b.text();if(!f||0===f.trim().length)throw console.error(`‚ùå Empty response from RSS feed: ${a}`),Error("Empty response from RSS feed");if(!f.includes("<")||!f.includes(">"))throw console.error(`‚ùå Response does not look like XML for ${a}:`,f.substring(0,200)),Error("Response is not valid XML");{let{DOMParser:a}=await c.e(219).then(c.t.bind(c,7219,19));d=new a().parseFromString(f,"text/xml")}if(d.getElementsByTagName("parsererror")[0])throw Error("Invalid XML format");let g=d.getElementsByTagName("channel");if(!g||0===g.length)throw Error("Invalid RSS feed: no channel found");let h=g[0],i=h.getElementsByTagName("title")[0],j=i?.textContent?.trim()||"Unknown Album",k=h.getElementsByTagName("description")[0],l=k?.textContent?.trim()||"",m=h.getElementsByTagName("link")[0],n=m?.textContent?.trim()||"",o=a=>{if(a)return a.replace(/<[^>]*>/g,"").replace(/&nbsp;/g," ").replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&quot;/g,'"').replace(/&#39;/g,"'").trim()},p="Unknown Artist",q=h.getElementsByTagName("itunes:author"),r=q.length>0?q[0]:h.getElementsByTagName("author")[0];if(r)p=r.textContent?.trim()||p;else{let a=j.split(" - ");a.length>1&&(p=a[0].trim())}let s=d.getElementsByTagName("item"),t=null,u=h.getElementsByTagName("itunes:image")[0]||null;if(u||(u=h.querySelector("itunes\\:image")),u&&(t=u.getAttribute("href")||null),!t){let a=h.querySelector("image url");a&&(t=a.textContent?.trim()||null)}if(!t){let a=h.querySelector("image");if(a){let b=a.getAttribute("url")||a.getAttribute("href");b&&(t=b)}}if(!t){let a=s[0];if(a){let b=a.getElementsByTagName("itunes:image")[0];if(b&&(t=b.getAttribute("href")||null),!t){let b=a.getElementsByTagName("media:content")[0];b&&b.getAttribute("type")?.startsWith("image/")&&(t=b.getAttribute("url")||null)}if(!t){let b=a.getElementsByTagName("enclosure")[0];b&&b.getAttribute("type")?.startsWith("image/")&&(t=b.getAttribute("url")||null)}}}if(!t){let a=(h.getElementsByTagName("description")[0]?.textContent||"").match(/<img[^>]+src=["']([^"']+)["'][^>]*>/i);a&&(t=a[1])}if(t)try{let a=new URL(t);t=`${a.protocol}//${a.host}${a.pathname}`}catch(a){console.warn("Invalid cover art URL:",t)}t?console.log(`üé® Found cover art for "${j}": ${t}`):console.warn(`‚ö†Ô∏è No cover art found for "${j}"`);let v=h.getElementsByTagName("itunes:subtitle")[0]?.textContent?.trim(),w=h.getElementsByTagName("itunes:summary")[0]?.textContent?.trim(),x=h.getElementsByTagName("language")[0],y=x?.textContent?.trim(),z=h.getElementsByTagName("copyright")[0],A=z?.textContent?.trim(),B=h.getElementsByTagName("itunes:explicit")[0],C=B?.textContent?.trim().toLowerCase()==="true",D=h.getElementsByTagName("itunes:keywords")[0],E=D?.textContent?.trim().split(",").map(a=>a.trim()).filter(a=>a)||[],F=h.getElementsByTagName("itunes:category"),G=Array.from(F).map(a=>a.getAttribute("text")).filter(Boolean),H=h.getElementsByTagName("itunes:owner")[0],I=H?{name:H.getElementsByTagName("itunes:name")[0]?.textContent?.trim(),email:H.getElementsByTagName("itunes:email")[0]?.textContent?.trim()}:void 0,J=[];console.log(`üéµ Found ${s.length} items in RSS feed`);for(let a=0;a<s.length;a++){let b,c=s[a],d=c.getElementsByTagName("title")[0]?.textContent?.trim()||`Track ${a+1}`,e="0:00",f=c.getElementsByTagName("itunes:duration")[0],g=c.getElementsByTagName("duration")[0];if(f?.textContent?.trim()?e=f.textContent.trim():g?.textContent?.trim()&&(e=g.textContent.trim()),e&&""!==e.trim()){let a=e.trim();if(/^\d+$/.test(a)){let b=parseInt(a);if(!isNaN(b)&&b>0){let a=Math.floor(b/60),c=b%60;e=`${a}:${c.toString().padStart(2,"0")}`}}else if(a.includes(":")){let b=a.split(":");if(2===b.length){let a=parseInt(b[0]),c=parseInt(b[1]);!isNaN(a)&&!isNaN(c)&&a>=0&&c>=0&&c<60&&(e=`${a}:${c.toString().padStart(2,"0")}`)}else if(3===b.length){let a=parseInt(b[0]),c=parseInt(b[1]),f=parseInt(b[2]);if(!isNaN(a)&&!isNaN(c)&&!isNaN(f)&&a>=0&&c>=0&&c<60&&f>=0&&f<60){let b=60*a+c,g=e;e=`${b}:${f.toString().padStart(2,"0")}`,a>0&&console.log(`üîÑ Converted HH:MM:SS "${g}" to MM:SS "${e}" for "${d}"`)}}}}else e="0:00",console.log(`‚ö†Ô∏è No duration found for track "${d}", using default`);let h=c.getElementsByTagName("enclosure")[0];if(h&&(b=h.getAttribute("url")||void 0),!b){let a=c.getElementsByTagName("link")[0];a&&(b=a.textContent?.trim()||void 0)}if(!b){let a=c.getElementsByTagName("media:content")[0];a&&(b=a.getAttribute("url")||void 0)}let i=c.getElementsByTagName("itunes:subtitle")[0]?.textContent?.trim(),j=c.getElementsByTagName("itunes:summary")[0]?.textContent?.trim(),k=a=>{if(a)return a.replace(/<[^>]*>/g,"").replace(/&nbsp;/g," ").replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&quot;/g,'"').replace(/&#39;/g,"'").trim()},l=c.getElementsByTagName("itunes:image")[0],m=l?.getAttribute("href")||l?.getAttribute("url"),n=c.getElementsByTagName("itunes:explicit")[0],o=n?.textContent?.trim().toLowerCase()==="true",p=c.getElementsByTagName("itunes:keywords")[0],q=p?.textContent?.trim().split(",").map(a=>a.trim()).filter(a=>a)||[];J.push({title:d,duration:e,url:b,trackNumber:a+1,subtitle:k(i),summary:k(j),image:m||void 0,explicit:o,keywords:q.length>0?q:void 0}),console.log(`‚úÖ Added track: "${d}" (${e}) - URL: ${b?"Found":"Missing"}`)}let K=h.getElementsByTagName("pubDate")[0]||h.getElementsByTagName("lastBuildDate")[0],L=K?.textContent?.trim()||new Date().toISOString(),M=[],N=Array.from(h.getElementsByTagName("podcast:funding")),O=Array.from(h.getElementsByTagName("funding"));[...N,...O].forEach(a=>{let b=a.getAttribute("url")||a.textContent?.trim(),c=a.textContent?.trim()||a.getAttribute("message");b&&M.push({url:b,message:c||void 0})});let P=[],Q=Array.from(h.getElementsByTagName("podcast:podroll")),R=Array.from(h.getElementsByTagName("podroll"));[...Q,...R].forEach(a=>{let b=Array.from(a.getElementsByTagName("podcast:remoteItem")),c=Array.from(a.getElementsByTagName("remoteItem"));[...b,...c].forEach(a=>{let b=a.getAttribute("feedUrl"),c=a.getAttribute("feedGuid"),d=a.getAttribute("title")||a.textContent?.trim(),e=a.getAttribute("description");b&&P.push({url:b,title:d||`Feed ${c?c.substring(0,8)+"...":"Unknown"}`,description:e||void 0})});let d=a.getAttribute("url"),e=a.getAttribute("title")||a.textContent?.trim(),f=a.getAttribute("description");d&&P.push({url:d,title:e||void 0,description:f||void 0})});let S=Array.from(h.getElementsByTagName("podcast:remoteItem")).find(a=>"publisher"===a.getAttribute("medium"));if(S){let a=S.getAttribute("feedGuid"),b=S.getAttribute("feedUrl"),c=S.getAttribute("medium");a&&b&&c&&(e={feedGuid:a,feedUrl:b,medium:c})}return{title:j,artist:p,description:o(l)||"",coverArt:t,tracks:J,releaseDate:L,link:n,funding:M.length>0?M:void 0,subtitle:o(v),summary:o(w),keywords:E.length>0?E:void 0,categories:G.length>0?G:void 0,explicit:C,language:y,copyright:A,owner:I&&(I.name||I.email)?I:void 0,podroll:P.length>0?P:void 0,publisher:e}}catch(b){return console.error("‚ùå Error parsing RSS feed:",b),console.error("\uD83D\uDD0D Error details:",{message:b instanceof Error?b.message:"Unknown error",stack:b instanceof Error?b.stack:void 0,feedUrl:a}),null}}static async parseMultipleFeeds(a){console.log(`üîÑ Parsing ${a.length} RSS feeds...`);let b=[];for(let c=0;c<a.length;c+=20){let d=a.slice(c,c+20);console.log(`üì¶ Processing batch ${Math.floor(c/20)+1}/${Math.ceil(a.length/20)} (${d.length} feeds)`);let e=d.map(async a=>{try{return await this.withRetry(()=>this.parseAlbumFeed(a),2,`feed ${a}`)}catch(b){if(b instanceof TypeError&&b.message.includes("NetworkError"))return console.error(`‚ùå NetworkError when attempting to fetch resource.`),console.log("\uD83D\uDD0D Error details:",{message:b.message,stack:b.stack,feedUrl:a}),null;return console.error(`‚ùå Failed to parse feed ${a} after retries:`,b),null}}),f=await Promise.allSettled(e),g=f.filter(a=>"fulfilled"===a.status&&null!==a.value),h=f.filter(a=>"rejected"===a.status||null===a.value);h.length>0&&(console.warn(`‚ö†Ô∏è Failed to parse ${h.length} feeds in batch ${Math.floor(c/20)+1}`),h.slice(0,3).forEach((a,b)=>{"rejected"===a.status?console.error(`‚ùå Failed to parse feed ${d[b]}: ${a.reason}`):"fulfilled"===a.status&&null===a.value&&console.error(`‚ùå Feed ${d[b]} returned null`)}),h.length>3&&console.warn(`... and ${h.length-3} more failures`)),b.push(...g.map(a=>a.value)),c+20<a.length&&await new Promise(a=>setTimeout(a,50))}return console.log(`‚úÖ Successfully parsed ${b.length} albums from ${a.length} feeds`),b}static async parsePublisherFeedInfo(a){try{let b,d;if(!(b=await fetch(a)).ok)throw Error(`Failed to fetch publisher feed: ${b.status}`);let e=await b.text();{let{DOMParser:a}=await c.e(219).then(c.t.bind(c,7219,19));d=new a().parseFromString(e,"text/xml")}if(d.getElementsByTagName("parsererror")[0])throw Error("Invalid XML format");let f=d.getElementsByTagName("channel");if(!f||0===f.length)throw Error("Invalid RSS feed: no channel found");let g=f[0],h=g.getElementsByTagName("title")[0],i=h?.textContent?.trim()||"",j=g.getElementsByTagName("description")[0],k=j?.textContent?.trim()||"",l=i,m=g.getElementsByTagName("itunes:author"),n=m.length>0?m[0]:g.getElementsByTagName("author")[0];n&&(l=n.textContent?.trim()||l);let o=null,p=g.getElementsByTagName("itunes:image")[0]||null;if(p||(p=g.querySelector("itunes\\:image")),p&&(o=p.getAttribute("href")||null),!o){let a=g.querySelector("image url");a&&(o=a.textContent?.trim()||null)}return{title:i,description:k,artist:l,coverArt:o||void 0}}catch(a){return console.error("‚ùå Error parsing publisher feed info:",a),null}}static async parsePublisherFeed(a){try{let b,d;if(!(b=await fetch(a)).ok)throw Error(`Failed to fetch publisher feed: ${b.status}`);let e=await b.text();{let{DOMParser:a}=await c.e(219).then(c.t.bind(c,7219,19));d=new a().parseFromString(e,"text/xml")}if(d.getElementsByTagName("parsererror")[0])throw Error("Invalid XML format");let f=d.getElementsByTagName("channel");if(!f||0===f.length)throw Error("Invalid RSS feed: no channel found");let g=f[0],h=[];return Array.from(g.getElementsByTagName("podcast:remoteItem")).forEach(a=>{let b=a.getAttribute("medium"),c=a.getAttribute("feedGuid"),d=a.getAttribute("feedUrl"),e=a.getAttribute("title")||a.textContent?.trim();"music"===b&&c&&d&&h.push({feedGuid:c,feedUrl:d,medium:b,title:e})}),console.log(`üè¢ Found ${h.length} music items in publisher feed: ${a}`),h}catch(a){return console.error("‚ùå Error parsing publisher feed:",a),[]}}static async parsePublisherFeedAlbums(a){console.log(`üè¢ Parsing publisher feed for albums: ${a}`);let b=await this.parsePublisherFeed(a);if(0===b.length)return console.log(`üì≠ No music items found in publisher feed: ${a}`),[];let c=b.map(a=>a.feedUrl);console.log(`üéµ Loading ${c.length} music feeds from publisher...`);let d=5,e=500;c.length>20&&(d=8,e=300);let f=[];for(let a=0;a<c.length;a+=d){let b=c.slice(a,a+d),g=Math.floor(a/d)+1,h=Math.ceil(c.length/d);console.log(`üì¶ Processing publisher batch ${g}/${h} (${b.length} feeds)`);try{let a=await this.parseMultipleFeeds(b);f.push(...a),console.log(`‚úÖ Batch ${g}/${h} completed: ${a.length} albums (${f.length}/${c.length} total)`)}catch(a){console.error(`‚ùå Error in publisher batch ${g}/${h}:`,a)}a+d<c.length&&await new Promise(a=>setTimeout(a,e))}return console.log(`üé∂ Loaded ${f.length} albums from publisher feed`),f}}},6487:()=>{},8335:()=>{}};